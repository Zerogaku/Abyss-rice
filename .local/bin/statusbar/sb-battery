#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

. ~/.local/bin/statusbar/ext/sb-colors
case $BLOCK_BUTTON in
	3) notify-send "🔋 Battery module" "🔋: discharging
🛑: not charging
♻: stagnant charge
🔌: charging
⚡: charged
❗: battery very low!
- Scroll to change adjust xbacklight." ;;
	4) xbacklight -inc 10 ;;
	5) xbacklight -dec 10 ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

for battery in /sys/class/power_supply/BAT?*; do
    	# If non-first battery, print a space separator.
    	[ -n "${capacity+x}" ] && printf " "

	# Sets up the status and capacity
    	capacity="$(cat "$battery/capacity" 2>&1)"
    	if [ "$capacity" -gt 90 ]; then
        	status="  "
    	elif [ "$capacity" -gt 60 ]; then
        	status="  "
    	elif [ "$capacity" -gt 40 ]; then
        	status="  "
    	elif [ "$capacity" -gt 10 ]; then
        	status="  "
    	else
		status="  "
	fi

	case "$(cat "$battery/status" 2>&1)" in
		Full) status=" " ;;
		Discharging)
		    if [ "$capacity" -le 20 ]; then
			status=" $status"
			notify-send "🪫Battery very low, please charge"
		    fi
		    ;;
		Charging) status=" " ;;
		"Not charging") status="  " ;;
		Unknown) status="  $status" ;;
		*) exit 1 ;;
	esac
    	# Prints the info
    	#printf "^B9^ %s^B12^ %d%%" "$status" "$capacity"
    	#printf "^b$Lor^^c$LF^ %s^b$Dor^^c$LF^ %d%%" "$status" "$capacity"
    	printf "${Baticon} %s${Batinfo} %d%%" "$status" "$capacity"
done && echo
